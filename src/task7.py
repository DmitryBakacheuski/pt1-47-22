"""Григорианский календарь в порядковый
Порядковая дата содержит номер года и порядковый номер дня в этом году – оба в целочисленном
 формате. При этом год может быть любым согласно григорианскому календарю, а номер дня – числом
 в интервале от 1 до 366 (чтобы учесть високосные годы). Порядковые даты удобно использовать при
 расчете разницы в днях, когда счет ведется именно в днях, а не месяцах. Например, это может
 касаться 90-дневного периода возврата товара для покупателей, расчета срока годности товаров или
 прогнозируемой даты появления малыша на свет.
Напишите функцию с именем ordinal_date, принимающую на вход три целых числа: день, месяц и год.
Функция должна возвращать порядковый номер заданного дня в указанном году. В основной программе у
пользователя должны запрашиваться день, месяц и год соответственно и выводиться на экран порядковый
 номер дня в заданном году. Программа должна запускаться только в том случае, если она не
 импортирована в виде модуля в другой файл.
"""

day = int(input('Введите день месяца: '))
month = int(input('Введите месяц: '))
year = int(input('Введите год: '))


def ordinal_date(day, month, year):
    dict_days = {1: 0, 2: 31, 3: 59, 4: 90, 5: 120, 6: 151, 7: 181, 8: 212, 9: 243, 10: 273,
                 11: 304, 12: 334} #Словарь с количеством дней относительно месяца
    result = dict_days[month] + day
    if year % 4 == 0 != year % 100 or year % 400 == 0: #Выясняем високосный ли год
        if b > 2: # Проверка, нужна ли поправка на 1 день
            result += 1

    return result


ordinal_date(day, month, year)
